package b2note;

import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Font;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javafx.scene.*;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;
import javax.swing.text.Highlighter;
import javax.swing.text.JTextComponent;

public class TextEidtorGUI extends javax.swing.JFrame {
    String filename; // the name of file (whether U are going to save or open it)
    Clipboard clipboard = getToolkit().getSystemClipboard();
    public TextEidtorGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        SearchButton = new javax.swing.JButton();
        SearchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        NewFile = new javax.swing.JMenuItem();
        OpenFile = new javax.swing.JMenuItem();
        SaveFile = new javax.swing.JMenuItem();
        Close = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        CutText = new javax.swing.JMenuItem();
        CopyText = new javax.swing.JMenuItem();
        PasteText = new javax.swing.JMenuItem();
        Size = new javax.swing.JMenu();
        Large = new javax.swing.JMenuItem();
        Normal = new javax.swing.JMenuItem();
        Small = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jFrame1.getContentPane().setLayout(new java.awt.CardLayout(5, 5));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("B2Note");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        setType(java.awt.Window.Type.POPUP);

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchButton))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchField)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        File.setText("File");
        File.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        NewFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        NewFile.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        NewFile.setText("New");
        NewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFileActionPerformed(evt);
            }
        });
        File.add(NewFile);

        OpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        OpenFile.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        OpenFile.setText("Open");
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });
        File.add(OpenFile);

        SaveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SaveFile.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        SaveFile.setText("Save");
        SaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFileActionPerformed(evt);
            }
        });
        File.add(SaveFile);

        Close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        Close.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        File.add(Close);

        jMenuBar1.add(File);

        Edit.setText("Edit");
        Edit.setFont(new java.awt.Font("Microsoft YaHei Light", 3, 18)); // NOI18N

        CutText.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        CutText.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        CutText.setText("Cut");
        CutText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutTextActionPerformed(evt);
            }
        });
        Edit.add(CutText);

        CopyText.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        CopyText.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        CopyText.setText("Copy");
        CopyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyTextActionPerformed(evt);
            }
        });
        Edit.add(CopyText);

        PasteText.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        PasteText.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        PasteText.setText("Paste");
        PasteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteTextActionPerformed(evt);
            }
        });
        Edit.add(PasteText);

        jMenuBar1.add(Edit);

        Size.setText("Size");
        Size.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 18)); // NOI18N

        Large.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 14)); // NOI18N
        Large.setText("Large");
        Large.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LargeActionPerformed(evt);
            }
        });
        Size.add(Large);

        Normal.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        Normal.setText("Normal");
        Normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NormalActionPerformed(evt);
            }
        });
        Size.add(Normal);

        Small.setFont(new java.awt.Font("Microsoft YaHei UI Light", 3, 14)); // NOI18N
        Small.setLabel("small");
        Small.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmallActionPerformed(evt);
            }
        });
        Size.add(Small);

        jMenuBar1.add(Size);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("New way to write");

        pack();
    }// </editor-fold>//GEN-END:initComponents
// File menu Buttons
    private void SaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFileActionPerformed
        // hat happens when U click on (Save):
        //Choose where to save it
        FileDialog fileDialog = new FileDialog(TextEidtorGUI.this, "Save File", FileDialog.SAVE);
        fileDialog.setVisible(true);
        //Now do the saving
        if (fileDialog.getFile() != null) {
            filename = fileDialog.getDirectory() + fileDialog.getFile();
            setTitle(filename);
        }
        
        try {
            FileWriter fileWriter = new FileWriter(filename);
            fileWriter.write(TextArea.getText());
            setTitle(filename);
            fileWriter.close();
        } catch (IOException e) {
            System.out.print("File isn't found");
        }
    }//GEN-LAST:event_SaveFileActionPerformed

    private void NewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewFileActionPerformed
        // what will happens when U click on (New):
        TextArea.setText(""); 
        setTitle(filename);
    }//GEN-LAST:event_NewFileActionPerformed

    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
        // what ill happen when U click on (Open):
        FileDialog fileDialog = new FileDialog(TextEidtorGUI.this, "Open File", FileDialog.LOAD);
        fileDialog.setVisible(true);
        //Make it happens
        if (fileDialog.getFile() != null) {
            filename = fileDialog.getDirectory() + fileDialog.getFile();
            setTitle(filename);
        }
        //To read the file
        try {
            BufferedReader bufferedReader = new BufferedReader(new FileReader(filename));
            StringBuilder sb = new StringBuilder();
            //
            String line = null;
            while ((line = bufferedReader.readLine()) != null) {                
                sb.append(line + "\n"); //escape sequence
                TextArea.setText(sb.toString());
            }
            bufferedReader.close();
        } catch (IOException e) {
            System.out.println("File you are searching for isn't found!!");
        }
    }//GEN-LAST:event_OpenFileActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // what happens when U click on (Close):
        System.exit(0);
    }//GEN-LAST:event_CloseActionPerformed
// Edit menu Buttons
    private void CutTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutTextActionPerformed
        // what happens when U click on (Cut):
        String cuString = TextArea.getSelectedText();
        StringSelection cuSelection = new StringSelection(cuString);
        clipboard.setContents(cuSelection, cuSelection);
        //this part is only for cut button.
        TextArea.replaceRange(cuString, TextArea.getSelectionStart(), TextArea.getSelectionEnd());
    }//GEN-LAST:event_CutTextActionPerformed

    private void CopyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyTextActionPerformed
        // what happens when U click on (Copy):
        String copyText = TextArea.getSelectedText();
        StringSelection copySelection = new StringSelection(copyText);
        clipboard.setContents(copySelection, copySelection);
    }//GEN-LAST:event_CopyTextActionPerformed

    private void PasteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteTextActionPerformed
        // what happens when U click on (Paste):
        try {
            Transferable pasteText = clipboard.getContents(TextEidtorGUI.this);
            String sel = (String) pasteText.getTransferData(DataFlavor.stringFlavor);
            TextArea.replaceRange(sel, TextArea.getSelectionStart(), TextArea.getSelectionEnd());
        } catch (Exception e) {
            System.out.println("There is a PROBLEM. Please check again!");
        }
    }//GEN-LAST:event_PasteTextActionPerformed
    class myHighligher extends DefaultHighlighter.DefaultHighlightPainter{
        
        public myHighligher(Color color) {
            super(color);
        }
        
    }
    
    DefaultHighlighter.DefaultHighlightPainter highlighter = new myHighligher(Color.green);
    
    public void removeHighlight(JTextComponent textComp) {
        Highlighter removeHighlighter = textComp.getHighlighter();
        Highlighter.Highlight[] remove = removeHighlighter.getHighlights();
        
        for (int i = 0; i < remove.length; i++) {
            if (remove[i].getPainter() instanceof myHighligher) {
                removeHighlighter.removeHighlight(remove[i]);
            }
        }
    }
    public void searchTextArea(JTextComponent textcomp, String texString){
        removeHighlight(textcomp);
        try {
            Highlighter hilight = textcomp.getHighlighter();
            Document doc = textcomp.getDocument();
            String text = doc.getText(0, doc.getLength());
            
            int pos = 0;
            while ((pos = text.toUpperCase().indexOf(texString.toUpperCase(), pos)) >= 0) {                
                hilight.addHighlight(pos, pos+texString.length(), highlighter);
                pos += texString.length();
            }
        } catch (Exception e) {
            
        }
    }
// Search Button
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // what happens hen U click (search):
        searchTextArea(TextArea, SearchField.getText());
    }//GEN-LAST:event_SearchButtonActionPerformed
//Size font menu
    private void LargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LargeActionPerformed
        // Set font size to be large(35):
        TextArea.setFont(new Font("Century Gothic", Font.BOLD, 35));
    }//GEN-LAST:event_LargeActionPerformed

    private void NormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NormalActionPerformed
        // Set font size to be (25):
        TextArea.setFont(new Font("Times New Roman", Font.PLAIN, 25));
    }//GEN-LAST:event_NormalActionPerformed

    private void SmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmallActionPerformed
        // Set font size to be (15):
        TextArea.setFont(new Font("Times New Roman", Font.ITALIC, 15));
    }//GEN-LAST:event_SmallActionPerformed

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextEidtorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextEidtorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextEidtorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextEidtorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEidtorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Close;
    private javax.swing.JMenuItem CopyText;
    private javax.swing.JMenuItem CutText;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem Large;
    private javax.swing.JMenuItem NewFile;
    private javax.swing.JMenuItem Normal;
    private javax.swing.JMenuItem OpenFile;
    private javax.swing.JMenuItem PasteText;
    private javax.swing.JMenuItem SaveFile;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JMenu Size;
    private javax.swing.JMenuItem Small;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
